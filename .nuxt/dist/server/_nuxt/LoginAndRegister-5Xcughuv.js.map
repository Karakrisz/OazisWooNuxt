{"version":3,"file":"LoginAndRegister-5Xcughuv.js","sources":["../../../../woonuxt_base/app/components/forms/LoginAndRegister.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-lg mx-auto my-16 min-h-[600px] lg:my-24\">\n    <div class=\"flex flex-col items-center\">\n      <Logo class=\"mb-6 scale-125\" />\n      <h1 class=\"text-xl font-semibold lg:text-3xl\">{{ formTitle }}</h1>\n      <div v-if=\"formView === 'login'\" class=\"my-2 text-center\">\n        {{ $t('messages.account.noAccount') }}\n        <a class=\"font-semibold cursor-pointer text-primary\" @click=\"navigate('register')\"> {{ $t('messages.account.accountRegister') }} </a>.\n      </div>\n      <div v-if=\"formView === 'register'\" class=\"my-2 text-center\">\n        {{ $t('messages.account.hasAccount') }}\n        <a class=\"font-semibold cursor-pointer text-primary\" @click=\"navigate('login')\"> {{ $t('messages.general.please') }} {{ $t('messages.account.accountLogin') }} </a>.\n      </div>\n    </div>\n\n    <form class=\"mt-6\" @submit.prevent=\"handleFormSubmit(userInfo)\">\n      <label v-if=\"formView === 'register' || formView === 'forgotPassword'\" for=\"email\">\n        {{ emailLabel }}\n        <span class=\"text-red-500\">*</span> <br />\n        <input id=\"email\" v-model=\"userInfo.email\" :placeholder=\"inputPlaceholder.email\" type=\"text\" required />\n      </label>\n      <p v-if=\"formView === 'forgotPassword'\" class=\"text-sm text-gray-500\">{{ $t('messages.account.enterEmailOrUsernameForReset') }}</p>\n      <div v-if=\"formView !== 'forgotPassword'\">\n        <label for=\"username\">\n          {{ usernameLabel }}\n          <span class=\"text-red-500\">*</span> <br />\n          <input id=\"username\" v-model=\"userInfo.username\" :placeholder=\"inputPlaceholder.username\" type=\"text\" required />\n        </label>\n        <label for=\"password\">\n          {{ passwordLabel }} <span class=\"text-red-500\">*</span> <br />\n          <PasswordInput id=\"password\" className=\"border rounded-lg w-full p-3 px-4 bg-white\" v-model=\"userInfo.password\" :placeholder=\"inputPlaceholder.password\"\n          :required=\"true\" />\n        </label>\n      </div>\n      <Transition name=\"scale-y\" mode=\"out-in\">\n        <div v-if=\"message\" class=\"my-4 text-sm text-green-500\" v-html=\"message\"></div>\n      </Transition>\n      <Transition name=\"scale-y\" mode=\"out-in\">\n        <div v-if=\"errorMessage\" class=\"my-4 text-sm text-red-500\" v-html=\"errorMessage\"></div>\n      </Transition>\n      <button class=\"flex items-center justify-center gap-4 mt-4 text-lg\">\n        <LoadingIcon v-if=\"isPending\" stroke=\"4\" size=\"16\" color=\"#fff\" />\n        <span>{{ buttonText }}</span>\n      </button>\n    </form>\n    <div class=\"my-8 text-center cursor-pointer\" @click=\"navigate('forgotPassword')\" v-if=\"formView === 'login'\">{{ $t('messages.account.forgotPassword') }}</div>\n    <div class=\"my-8 text-center cursor-pointer\" @click=\"navigate('login')\" v-if=\"formView === 'forgotPassword'\">{{ $t('messages.account.backToLogin') }}</div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nconst { t } = useI18n();\nconst route = useRoute();\nconst router = useRouter();\nconst { loginUser, isPending, registerUser, sendResetPasswordEmail } = useAuth();\nconst userInfo = ref({ email: '', password: '', username: '' });\nconst formView = ref('login');\nconst message = ref('');\nconst errorMessage = ref('');\n\nconst updateFormView = () => {\n  if (route.query.action === 'forgotPassword') {\n    formView.value = 'forgotPassword';\n  } else if (route.query.action === 'register') {\n    formView.value = 'register';\n  } else {\n    formView.value = 'login';\n  }\n};\nwatch(route, updateFormView, { immediate: true });\n\nconst login = async (userInfo) => {\n  const { success, error } = await loginUser(userInfo);\n  switch (error) {\n    case 'invalid_username':\n      errorMessage.value = t('messages.error.invalidUsername');\n      break;\n    case 'incorrect_password':\n      errorMessage.value = t('messages.error.incorrectPassword');\n      break;\n    default:\n      errorMessage.value = error;\n      break;\n  }\n\n  if (success) {\n    errorMessage.value = '';\n    message.value = t('messages.account.loggingIn');\n  }\n};\n\nconst handleFormSubmit = async (userInfo) => {\n  if (formView.value === 'register') {\n    const { success, error } = await registerUser(userInfo);\n    if (success) {\n      errorMessage.value = '';\n      message.value = t('messages.account.accountCreated') + ' ' + t('messages.account.loggingIn');\n      setTimeout(() => {\n        login(userInfo);\n      }, 2000);\n    } else {\n      errorMessage.value = error;\n    }\n  } else if (formView.value === 'forgotPassword') {\n    resetPassword(userInfo);\n  } else {\n    login(userInfo);\n  }\n};\n\nconst resetPassword = async (userInfo) => {\n  const { success, error } = await sendResetPasswordEmail(userInfo.email);\n  if (success) {\n    errorMessage.value = '';\n    message.value = t('messages.account.ifRegistered');\n  } else {\n    errorMessage.value = error;\n  }\n};\n\nconst navigate = (view) => {\n  formView.value = view;\n  if (view === 'forgotPassword') {\n    router.push({ query: { action: 'forgotPassword' } });\n  } else if (view === 'register') {\n    router.push({ query: { action: 'register' } });\n  } else {\n    router.push({ query: {} });\n  }\n};\n\nconst formTitle = computed(() => {\n  if (formView.value === 'login') {\n    return t('messages.account.loginToAccount');\n  } else if (formView.value === 'register') {\n    return t('messages.account.accountRegister');\n  } else if (formView.value === 'forgotPassword') {\n    return t('messages.account.forgotPassword');\n  }\n});\n\nconst buttonText = computed(() => {\n  if (formView.value === 'login') {\n    return t('messages.account.login');\n  } else if (formView.value === 'register') {\n    return t('messages.account.register');\n  } else if (formView.value === 'forgotPassword') {\n    return t('messages.account.sendPasswordResetEmail');\n  }\n});\n\nconst emailLabel = computed(() => {\n  return (formView.value === 'register') ? t('messages.billing.email') : t('messages.account.emailOrUsername');\n});\n\nconst usernameLabel = computed(() => {\n  return (formView.value === 'login') ? t('messages.account.emailOrUsername') : t('messages.account.username');\n});\n\nconst passwordLabel = computed(() => {\n  return t('messages.account.password');\n});\n\nconst inputPlaceholder = computed(() => {\n  return {\n    email: emailLabel.value,\n    username: usernameLabel.value,\n    password: passwordLabel.value,\n  };\n});\n\n</script>\n\n<style lang=\"postcss\" scoped>\ninput,\nbutton {\n  @apply border rounded-lg mb-4 w-full p-3 px-4 bg-white;\n}\n\nform button {\n  @apply rounded-lg font-bold bg-gray-800 text-white py-3 px-8 hover:bg-gray-800;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDM,UAAA,EAAE,MAAM;AACd,UAAM,QAAQ;AACC,cAAU;AACzB,UAAM,EAAE,WAAW,WAAW,cAAc,uBAAA,IAA2B;AACjE,UAAA,WAAW,IAAI,EAAE,OAAO,IAAI,UAAU,IAAI,UAAU,GAAA,CAAI;AACxD,UAAA,WAAW,IAAI,OAAO;AACtB,UAAA,UAAU,IAAI,EAAE;AAChB,UAAA,eAAe,IAAI,EAAE;AAE3B,UAAM,iBAAiB,MAAM;AACvB,UAAA,MAAM,MAAM,WAAW,kBAAkB;AAC3C,iBAAS,QAAQ;AAAA,MACR,WAAA,MAAM,MAAM,WAAW,YAAY;AAC5C,iBAAS,QAAQ;AAAA,MAAA,OACZ;AACL,iBAAS,QAAQ;AAAA,MACnB;AAAA,IAAA;AAEF,UAAM,OAAO,gBAAgB,EAAE,WAAW,KAAM,CAAA;AA8D1C,UAAA,YAAY,SAAS,MAAM;AAC3B,UAAA,SAAS,UAAU,SAAS;AAC9B,eAAO,EAAE,iCAAiC;AAAA,MAAA,WACjC,SAAS,UAAU,YAAY;AACxC,eAAO,EAAE,kCAAkC;AAAA,MAAA,WAClC,SAAS,UAAU,kBAAkB;AAC9C,eAAO,EAAE,iCAAiC;AAAA,MAC5C;AAAA,IAAA,CACD;AAEK,UAAA,aAAa,SAAS,MAAM;AAC5B,UAAA,SAAS,UAAU,SAAS;AAC9B,eAAO,EAAE,wBAAwB;AAAA,MAAA,WACxB,SAAS,UAAU,YAAY;AACxC,eAAO,EAAE,2BAA2B;AAAA,MAAA,WAC3B,SAAS,UAAU,kBAAkB;AAC9C,eAAO,EAAE,yCAAyC;AAAA,MACpD;AAAA,IAAA,CACD;AAEK,UAAA,aAAa,SAAS,MAAM;AAChC,aAAQ,SAAS,UAAU,aAAc,EAAE,wBAAwB,IAAI,EAAE,kCAAkC;AAAA,IAAA,CAC5G;AAEK,UAAA,gBAAgB,SAAS,MAAM;AACnC,aAAQ,SAAS,UAAU,UAAW,EAAE,kCAAkC,IAAI,EAAE,2BAA2B;AAAA,IAAA,CAC5G;AAEK,UAAA,gBAAgB,SAAS,MAAM;AACnC,aAAO,EAAE,2BAA2B;AAAA,IAAA,CACrC;AAEK,UAAA,mBAAmB,SAAS,MAAM;AAC/B,aAAA;AAAA,QACL,OAAO,WAAW;AAAA,QAClB,UAAU,cAAc;AAAA,QACxB,UAAU,cAAc;AAAA,MAAA;AAAA,IAC1B,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}